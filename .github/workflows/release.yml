name: deploy

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

jobs:
  check-version:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request_target' && github.event.action == 'closed' && github.event.pull_request.merged == true
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Check if version has been incremented
        run: |
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          VERSION_IN_PACKAGE_JSON=$(node -p "require('./package.json').version")
          LATEST_PUBLISHED_VERSION=$(npm view $PACKAGE_NAME version || echo "0.0.0")
          
          if [ "$VERSION_IN_PACKAGE_JSON" = "$LATEST_PUBLISHED_VERSION" ]; then
            echo "Version in package.json ($VERSION_IN_PACKAGE_JSON) has not been incremented."
            exit 1
          else
            echo "Version in package.json is incremented to $VERSION_IN_PACKAGE_JSON."

  publish:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request_target' && github.event.action == 'closed' && github.event.pull_request.merged == true
    needs: [build, check-version]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org/'
      - run: npm ci
      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
