import config from './index';

jest.mock('./core/plugin', () => ({
	MAX_NESTING_DEPTH: '',
}));

jest.mock('./core/plugin/decorators/plugin.decorator');

describe('stylelint main config', () => {
	const data = {
		'customSyntax': 'postcss-scss',
		'extends': ['stylelint-config-standard'],
		'ignoreFiles': ['**/*.css'],
		'plugins': ['stylelint-order'],
		'rules': {
			'at-rule-no-unknown': [
				true,
				{
					'ignoreAtRules': ['mixin', 'include', 'extend', 'content', 'each', 'function', 'return', 'if', 'else'],
				},
			],
			'at-rule-property-required-list': {
				'font-face': ['font-display', 'font-family', 'font-style'],
			},
			'color-function-notation': [
				'legacy',
				{
					'ignore': ['with-var-inside'],
				},
			],
			'color-no-hex': true,
			'declaration-block-no-duplicate-properties': true,
			'declaration-block-no-redundant-longhand-properties': null,
			'declaration-property-unit-allowed-list': {
				'/^border-(top|bottom)-(left|right)-radius/': ['px', '%'],
				'/^border-(top|right|bottom|left)-width/': ['px'],
				'/^border-(top|right|bottom|left)/': ['px'],
				'/^margin/': ['px', '%'],
				'/^padding/': ['px', '%'],
				'animation': ['ms'],
				'animation-duration': ['ms'],
				'background-position': ['px', '%'],
				'background-size': ['px', '%'],
				'border': ['px'],
				'border-radius': ['px', '%'],
				'border-width': ['px'],
				'bottom': ['px', '%'],
				'box-shadow': ['px'],
				'column-gap': ['px', '%'],
				'flex-basis': ['px', '%'],
				'font-size': [],
				'gap': ['px', '%'],
				'grid-auto-columns': ['px', '%', 'fr'],
				'grid-auto-rows': ['px', '%', 'fr'],
				'grid-column-gap': ['px', '%'],
				'grid-gap': ['px', '%'],
				'grid-row-gap': ['px', '%'],
				'grid-template-columns': ['px', '%', 'fr'],
				'grid-template-rows': ['px', '%'],
				'height': ['px', '%'],
				'left': ['px', '%'],
				'line-height': [],
				'max-height': ['px', '%'],
				'max-width': ['px', '%'],
				'min-height': ['px', '%'],
				'min-width': ['px', '%'],
				'object-position': ['px', '%'],
				'outline-width': ['px'],
				'right': ['px', '%'],
				'text-shadow': ['px'],
				'top': ['px', '%'],
				'transition': ['ms'],
				'transition-duration': ['ms'],
				'width': ['px', '%'],
			},
			'declaration-property-value-no-unknown': true,
			'font-weight-notation': 'numeric',
			'function-disallowed-list': ['rgb'],
			'function-url-no-scheme-relative': true,
			'function-url-scheme-disallowed-list': ['ftp', '/^http/'],
			'media-feature-name-no-vendor-prefix': true,
			'media-feature-name-unit-allowed-list': {
				'/^border-(top|bottom)-(left|right)-radius/': ['px', '%'],
				'/^border-(top|right|bottom|left)-width/': ['px'],
				'/^border-(top|right|bottom|left)/': ['px'],
				'/^margin/': ['px', '%'],
				'/^padding/': ['px', '%'],
				'animation': ['ms'],
				'animation-duration': ['ms'],
				'background-position': ['px', '%'],
				'background-size': ['px', '%'],
				'border': ['px'],
				'border-radius': ['px', '%'],
				'border-width': ['px'],
				'bottom': ['px', '%'],
				'box-shadow': ['px'],
				'column-gap': ['px', '%'],
				'flex-basis': ['px', '%'],
				'font-size': [],
				'gap': ['px', '%'],
				'grid-auto-columns': ['px', '%', 'fr'],
				'grid-auto-rows': ['px', '%', 'fr'],
				'grid-column-gap': ['px', '%'],
				'grid-gap': ['px', '%'],
				'grid-row-gap': ['px', '%'],
				'grid-template-columns': ['px', '%', 'fr'],
				'grid-template-rows': ['px', '%'],
				'height': ['px', '%'],
				'left': ['px', '%'],
				'line-height': [],
				'max-height': ['px', '%'],
				'max-width': ['px', '%'],
				'min-height': ['px', '%'],
				'min-width': ['px', '%'],
				'object-position': ['px', '%'],
				'outline-width': ['px'],
				'right': ['px', '%'],
				'text-shadow': ['px'],
				'top': ['px', '%'],
				'transition': ['ms'],
				'transition-duration': ['ms'],
				'width': ['px', '%'],
			},
			'order/order': [
				{
					'name': 'charset',
					'type': 'at-rule',
				},
				{
					'name': 'import',
					'type': 'at-rule',
				},
				{
					'name': 'font-face',
					'type': 'at-rule',
				},
				{
					'name': 'font-feature-values',
					'type': 'at-rule',
				},
				{
					'name': 'font-palette-values',
					'type': 'at-rule',
				},
				{
					'name': 'keyframes',
					'type': 'at-rule',
				},
				{
					'name': 'layer',
					'type': 'at-rule',
				},
				{
					'name': 'property',
					'type': 'at-rule',
				},
				{
					'name': 'counter-style',
					'type': 'at-rule',
				},
				{
					'name': 'namespace',
					'type': 'at-rule',
				},
				'custom-properties',
				'dollar-variables',
				{
					'name': 'include',
					'parameter': '^reset[\\s\\S]*',
					'type': 'at-rule',
				},
				'declarations',
				{
					'name': 'extend',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': 'include[\\s\\S]*',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': 'before-clean[\\s\\S]*',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': 'before[\\s\\S]*',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': 'before-hover[\\s\\S]*',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': 'before-active[\\s\\S]*',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': 'after-clean[\\s\\S]*',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': 'after[\\s\\S]*',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': 'after-hover[\\s\\S]*',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': 'after-active[\\s\\S]*',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': 'before-after-clean[\\s\\S]*',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': 'before-after[\\s\\S]*',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': 'before-after-hover[\\s\\S]*',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': 'before-after-active[\\s\\S]*',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': 'hover[\\s\\S]*',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': 'active[\\s\\S]*',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': 'focus[\\s\\S]*',
					'type': 'at-rule',
				},
				{
					'selector': '^:root',
					'type': 'rule',
				},
				{
					'selector': '^:first',
					'type': 'rule',
				},
				{
					'selector': '^:first-child',
					'type': 'rule',
				},
				{
					'selector': '^:first-of-type',
					'type': 'rule',
				},
				{
					'selector': '^:lang',
					'type': 'rule',
				},
				{
					'selector': '^:last-child',
					'type': 'rule',
				},
				{
					'selector': '^:last-of-type',
					'type': 'rule',
				},
				{
					'selector': '^:nth-last-child',
					'type': 'rule',
				},
				{
					'selector': '^:nth-last-of-type',
					'type': 'rule',
				},
				{
					'selector': '^:nth-child',
					'type': 'rule',
				},
				{
					'selector': '^:nth-of-type',
					'type': 'rule',
				},
				{
					'selector': '^:only-child',
					'type': 'rule',
				},
				{
					'selector': '^:only-of-type',
					'type': 'rule',
				},
				{
					'selector': '^:hover',
					'type': 'rule',
				},
				{
					'selector': '^:focus',
					'type': 'rule',
				},
				{
					'selector': '^:active',
					'type': 'rule',
				},
				{
					'selector': '^:visited',
					'type': 'rule',
				},
				{
					'selector': '^:invalid',
					'type': 'rule',
				},
				{
					'selector': '^:valid',
					'type': 'rule',
				},
				{
					'selector': '^:empty',
					'type': 'rule',
				},
				{
					'selector': '^:target',
					'type': 'rule',
				},
				{
					'selector': '^:enabled',
					'type': 'rule',
				},
				{
					'selector': '^:disabled',
					'type': 'rule',
				},
				{
					'selector': '^:checked',
					'type': 'rule',
				},
				{
					'selector': '^:is',
					'type': 'rule',
				},
				{
					'selector': '^:where',
					'type': 'rule',
				},
				{
					'selector': '^:has',
					'type': 'rule',
				},
				{
					'selector': '^:dir',
					'type': 'rule',
				},
				{
					'selector': '^:default',
					'type': 'rule',
				},
				{
					'selector': '^:optional',
					'type': 'rule',
				},
				{
					'selector': '^:required',
					'type': 'rule',
				},
				{
					'selector': '^:read-only',
					'type': 'rule',
				},
				{
					'selector': '^:read-write',
					'type': 'rule',
				},
				{
					'selector': '^:scope',
					'type': 'rule',
				},
				{
					'selector': '^:placeholder-shown',
					'type': 'rule',
				},
				{
					'selector': '^:autofill',
					'type': 'rule',
				},
				{
					'selector': '^:indeterminate',
					'type': 'rule',
				},
				{
					'selector': '^:[a-z]',
					'type': 'rule',
				},
				{
					'selector': '^&:root',
					'type': 'rule',
				},
				{
					'selector': '^&:first',
					'type': 'rule',
				},
				{
					'selector': '^&:first-child',
					'type': 'rule',
				},
				{
					'selector': '^&:first-of-type',
					'type': 'rule',
				},
				{
					'selector': '^&:lang',
					'type': 'rule',
				},
				{
					'selector': '^&:last-child',
					'type': 'rule',
				},
				{
					'selector': '^&:last-of-type',
					'type': 'rule',
				},
				{
					'selector': '^&:nth-last-child',
					'type': 'rule',
				},
				{
					'selector': '^&:nth-last-of-type',
					'type': 'rule',
				},
				{
					'selector': '^&:nth-child',
					'type': 'rule',
				},
				{
					'selector': '^&:nth-of-type',
					'type': 'rule',
				},
				{
					'selector': '^&:only-child',
					'type': 'rule',
				},
				{
					'selector': '^&:only-of-type',
					'type': 'rule',
				},
				{
					'selector': '^&:hover',
					'type': 'rule',
				},
				{
					'selector': '^&:focus',
					'type': 'rule',
				},
				{
					'selector': '^&:active',
					'type': 'rule',
				},
				{
					'selector': '^&:visited',
					'type': 'rule',
				},
				{
					'selector': '^&:invalid',
					'type': 'rule',
				},
				{
					'selector': '^&:valid',
					'type': 'rule',
				},
				{
					'selector': '^&:empty',
					'type': 'rule',
				},
				{
					'selector': '^&:target',
					'type': 'rule',
				},
				{
					'selector': '^&:enabled',
					'type': 'rule',
				},
				{
					'selector': '^&:disabled',
					'type': 'rule',
				},
				{
					'selector': '^&:checked',
					'type': 'rule',
				},
				{
					'selector': '^&:is',
					'type': 'rule',
				},
				{
					'selector': '^&:where',
					'type': 'rule',
				},
				{
					'selector': '^&:has',
					'type': 'rule',
				},
				{
					'selector': '^&:dir',
					'type': 'rule',
				},
				{
					'selector': '^&:default',
					'type': 'rule',
				},
				{
					'selector': '^&:optional',
					'type': 'rule',
				},
				{
					'selector': '^&:required',
					'type': 'rule',
				},
				{
					'selector': '^&:read-only',
					'type': 'rule',
				},
				{
					'selector': '^&:read-write',
					'type': 'rule',
				},
				{
					'selector': '^&:scope',
					'type': 'rule',
				},
				{
					'selector': '^&:placeholder-shown',
					'type': 'rule',
				},
				{
					'selector': '^&:autofill',
					'type': 'rule',
				},
				{
					'selector': '^&:indeterminate',
					'type': 'rule',
				},
				{
					'selector': '^&:[a-z]',
					'type': 'rule',
				},
				{
					'selector': '^::first-letter',
					'type': 'rule',
				},
				{
					'selector': '^::before',
					'type': 'rule',
				},
				{
					'selector': '^::after',
					'type': 'rule',
				},
				{
					'selector': '^::placeholder',
					'type': 'rule',
				},
				{
					'selector': '^::first-line',
					'type': 'rule',
				},
				{
					'selector': '^::selection',
					'type': 'rule',
				},
				{
					'selector': '^::backdrop',
					'type': 'rule',
				},
				{
					'selector': '^::marker',
					'type': 'rule',
				},
				{
					'selector': '^::spelling-error',
					'type': 'rule',
				},
				{
					'selector': '^::grammar-error',
					'type': 'rule',
				},
				{
					'selector': '^::cue',
					'type': 'rule',
				},
				{
					'selector': '^::file-selector-button',
					'type': 'rule',
				},
				{
					'selector': '^::highlight',
					'type': 'rule',
				},
				{
					'selector': '^::slotted',
					'type': 'rule',
				},
				{
					'selector': '^::target-text',
					'type': 'rule',
				},
				{
					'selector': '^::-webkit-input-placeholder',
					'type': 'rule',
				},
				{
					'selector': '^::-moz-placeholder',
					'type': 'rule',
				},
				{
					'selector': '^::-ms-input-placeholder',
					'type': 'rule',
				},
				{
					'selector': '^::-ms-clear',
					'type': 'rule',
				},
				{
					'selector': '^::-ms-reveal',
					'type': 'rule',
				},
				{
					'selector': '^::-webkit-search-cancel-button',
					'type': 'rule',
				},
				{
					'selector': '^::-webkit-search-decoration',
					'type': 'rule',
				},
				{
					'selector': '^::-webkit-search-results-button',
					'type': 'rule',
				},
				{
					'selector': '^::-webkit-search-results-decoration',
					'type': 'rule',
				},
				{
					'selector': '^::-webkit-slider-runnable-track',
					'type': 'rule',
				},
				{
					'selector': '^::-webkit-slider-thumb',
					'type': 'rule',
				},
				{
					'selector': '^::-webkit-media-controls-panel',
					'type': 'rule',
				},
				{
					'selector': '^::-webkit-media-controls-play-button',
					'type': 'rule',
				},
				{
					'selector': '^::-webkit-media-controls-volume-slider',
					'type': 'rule',
				},
				{
					'selector': '^::[a-z]',
					'type': 'rule',
				},
				{
					'selector': '^&::first-letter',
					'type': 'rule',
				},
				{
					'selector': '^&::before',
					'type': 'rule',
				},
				{
					'selector': '^&::after',
					'type': 'rule',
				},
				{
					'selector': '^&::placeholder',
					'type': 'rule',
				},
				{
					'selector': '^&::first-line',
					'type': 'rule',
				},
				{
					'selector': '^&::selection',
					'type': 'rule',
				},
				{
					'selector': '^&::backdrop',
					'type': 'rule',
				},
				{
					'selector': '^&::marker',
					'type': 'rule',
				},
				{
					'selector': '^&::spelling-error',
					'type': 'rule',
				},
				{
					'selector': '^&::grammar-error',
					'type': 'rule',
				},
				{
					'selector': '^&::cue',
					'type': 'rule',
				},
				{
					'selector': '^&::file-selector-button',
					'type': 'rule',
				},
				{
					'selector': '^&::highlight',
					'type': 'rule',
				},
				{
					'selector': '^&::slotted',
					'type': 'rule',
				},
				{
					'selector': '^&::target-text',
					'type': 'rule',
				},
				{
					'selector': '^&::-webkit-input-placeholder',
					'type': 'rule',
				},
				{
					'selector': '^&::-moz-placeholder',
					'type': 'rule',
				},
				{
					'selector': '^&::-ms-input-placeholder',
					'type': 'rule',
				},
				{
					'selector': '^&::-ms-clear',
					'type': 'rule',
				},
				{
					'selector': '^&::-ms-reveal',
					'type': 'rule',
				},
				{
					'selector': '^&::-webkit-search-cancel-button',
					'type': 'rule',
				},
				{
					'selector': '^&::-webkit-search-decoration',
					'type': 'rule',
				},
				{
					'selector': '^&::-webkit-search-results-button',
					'type': 'rule',
				},
				{
					'selector': '^&::-webkit-search-results-decoration',
					'type': 'rule',
				},
				{
					'selector': '^&::-webkit-slider-runnable-track',
					'type': 'rule',
				},
				{
					'selector': '^&::-webkit-slider-thumb',
					'type': 'rule',
				},
				{
					'selector': '^&::-webkit-media-controls-panel',
					'type': 'rule',
				},
				{
					'selector': '^&::-webkit-media-controls-play-button',
					'type': 'rule',
				},
				{
					'selector': '^&::-webkit-media-controls-volume-slider',
					'type': 'rule',
				},
				{
					'selector': '^&::[a-z]',
					'type': 'rule',
				},
				{
					'selector': '^[a-z]',
					'type': 'rule',
				},
				{
					'selector': '^\\*',
					'type': 'rule',
				},
				{
					'selector': '^\\.\\w+',
					'type': 'rule',
				},
				{
					'selector': '^\\w+\\[\\w+',
					'type': 'rule',
				},
				{
					'selector': '^\\w+\\[\\w+\\$=',
					'type': 'rule',
				},
				{
					'selector': '^\\w+\\[\\w+\\^=',
					'type': 'rule',
				},
				{
					'selector': '^\\w+\\[\\w+\\*=',
					'type': 'rule',
				},
				{
					'selector': '^\\w+\\[\\w+\\~=',
					'type': 'rule',
				},
				{
					'selector': '^\\w+\\[\\w+\\|=',
					'type': 'rule',
				},
				{
					'selector': '^\\w+\\[\\w+="\\w+"]',
					'type': 'rule',
				},
				{
					'selector': '^\\[\\w+',
					'type': 'rule',
				},
				{
					'selector': '^\\[\\w+\\$=',
					'type': 'rule',
				},
				{
					'selector': '^\\[\\w+\\^=',
					'type': 'rule',
				},
				{
					'selector': '^\\[\\w+\\*=',
					'type': 'rule',
				},
				{
					'selector': '^\\[\\w+\\~=',
					'type': 'rule',
				},
				{
					'selector': '^\\[\\w+\\|=',
					'type': 'rule',
				},
				{
					'selector': '^\\>',
					'type': 'rule',
				},
				{
					'selector': '^\\+',
					'type': 'rule',
				},
				{
					'selector': '^\\~',
					'type': 'rule',
				},
				{
					'selector': '^#',
					'type': 'rule',
				},
				{
					'selector': '^&\\.\\w+',
					'type': 'rule',
				},
				{
					'selector': '^&\\[\\w+',
					'type': 'rule',
				},
				{
					'selector': '^&\\[\\w+\\$=',
					'type': 'rule',
				},
				{
					'selector': '^&\\[\\w+\\^=',
					'type': 'rule',
				},
				{
					'selector': '^&\\[\\w+\\*=',
					'type': 'rule',
				},
				{
					'selector': '^&\\[\\w+\\~=',
					'type': 'rule',
				},
				{
					'selector': '^&\\[\\w+\\|=',
					'type': 'rule',
				},
				{
					'selector': '^&',
					'type': 'rule',
				},
				{
					'selector': '^&:not',
					'type': 'rule',
				},
				{
					'name': 'include',
					'parameter': '^media-desktop[\\s\\S]*',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': '^media-mobile[\\s\\S]*',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': '^media-min\\(xs[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': '^media-min\\(sm[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': '^media-min\\(md[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': '^media-min\\(lg[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': '^media-min\\(xl[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': '^media-min\\(xxl[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': '^media-max\\(xs[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': '^media-max\\(sm[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': '^media-max\\(md[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': '^media-max\\(lg[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': '^media-max\\(xl[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': '^media-max\\(xxl[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': '^media-only\\(xs[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': '^media-only\\(sm[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': '^media-only\\(md[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': '^media-only\\(lg[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': '^media-only\\(xl[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': '^media-only\\(xxl[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': '^media-between\\(xs, sm[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': '^media-between\\(xs, md[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': '^media-between\\(xs, lg[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': '^media-between\\(xs, xl[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': '^media-between\\(xs, xxl[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': '^media-between\\(sm, md[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': '^media-between\\(sm, lg[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': '^media-between\\(sm, xl[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': '^media-between\\(sm, xxl[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': '^media-between\\(md, lg[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': '^media-between\\(md, xl[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': '^media-between\\(md, xxl[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': '^media-between\\(lg, xl[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': '^media-between\\(lg, xxl[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'include',
					'parameter': '^media-between\\(xl, xxl[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': 'all[\\s\\S]*',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': 'print[\\s\\S]*',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': 'screen[\\s\\S]*',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': 'speech[\\s\\S]*',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(width[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(min-width[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(max-width[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(min-width and max-width[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(orientation: portrait[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(orientation: landscape[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(aspect-ratio[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(min-aspect-ratio and max-aspect-ratio[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(color[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(min-color and max-color[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(color-index[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(min-color-index and max-color-index[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(monochrome[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(min-monochrome and max-monochrome[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(resolution[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(min-resolution and max-resolution[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(scan: interlace[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(scan: progressive[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(grid[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(update-frequency[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(overflow-block[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(overflow-inline[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(pointer: none[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(pointer: coarse[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(pointer: fine[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(hover: none[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(hover: hover[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(any-pointer: none[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(any-pointer: coarse[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(any-pointer: fine[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(any-hover: none[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(any-hover: hover[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(light-level: dim[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(light-level: normal[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(light-level: washed[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(scripting: none[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(scripting: initial-only[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(scripting: enabled[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(device-width[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(device-height[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(device-aspect-ratio[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(-webkit-device-pixel-ratio[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(-webkit-transform-3d[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(-webkit-transform-2d[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(-webkit-transition[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(-webkit-animation[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(device-width[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(device-height[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'media',
					'parameter': '\\(device-aspect-ratio[\\s\\S]*\\)',
					'type': 'at-rule',
				},
				{
					'name': 'page',
					'type': 'at-rule',
				},
				{
					'name': 'container',
					'type': 'at-rule',
				},
				{
					'name': 'supports',
					'type': 'at-rule',
				},
			],
			'order/properties-order': [
				{
					'properties': [
						'content',
						'position',
						'top',
						'right',
						'bottom',
						'left',
						'z-index',
						'display',
						'-webkit-flex',
						'-ms-flex',
						'flex',
						'-webkit-flex-grow',
						'flex-grow',
						'-webkit-flex-shrink',
						'flex-shrink',
						'-webkit-flex-basis',
						'flex-basis',
						'-webkit-flex-flow',
						'flex-flow',
						'-webkit-flex-direction',
						'-ms-flex-direction',
						'flex-direction',
						'-webkit-flex-wrap',
						'flex-wrap',
						'place-content',
						'-webkit-justify-content',
						'justify-content',
						'-webkit-align-content',
						'align-content',
						'-webkit-align-items',
						'align-items',
						'-webkit-dist',
						'-ms-flex-dist',
						'order',
						'-ms-grid-row-align',
						'-webkit-align-self',
						'align-self',
						'-ms-grid-column-align',
						'justify-self',
						'grid',
						'grid-area',
						'grid-auto-columns',
						'grid-auto-flow',
						'grid-auto-rows',
						'grid-column',
						'grid-column-end',
						'-ms-grid-column-span',
						'grid-column-gap',
						'-ms-grid-column',
						'grid-column-start',
						'grid-gap',
						'gap',
						'grid-row',
						'grid-row-end',
						'-ms-grid-row-span',
						'grid-row-gap',
						'-ms-grid-row',
						'grid-row-start',
						'grid-template',
						'grid-template-areas',
						'-ms-grid-columns',
						'grid-template-columns',
						'-ms-grid-rows',
						'grid-template-rows',
						'float',
						'clear',
						'-webkit-box-sizing',
						'-moz-box-sizing',
						'box-sizing',
						'width',
						'min-width',
						'max-width',
						'height',
						'min-height',
						'max-height',
						'margin',
						'margin-top',
						'margin-right',
						'margin-bottom',
						'margin-left',
						'padding',
						'padding-top',
						'padding-right',
						'padding-bottom',
						'padding-left',
						'overflow',
						'-ms-overflow-x',
						'overflow-x',
						'-ms-overflow-y',
						'overflow-y',
						'-webkit-overflow-scrolling',
						'-ms-overflow-style',
						'list-style',
						'list-style-position',
						'list-style-type',
						'list-style-image',
						'border-collapse',
						'border-spacing',
						'table-layout',
						'empty-cells',
						'caption-side',
						'font',
						'font-weight',
						'font-size',
						'line-height',
						'font-family',
						'vertical-align',
						'text-align',
						'direction',
						'color',
						'text-transform',
						'text-decoration',
						'font-style',
						'font-variant',
						'font-size-adjust',
						'font-stretch',
						'font-effect',
						'font-emphasize',
						'font-emphasize-position',
						'font-emphasize-style',
						'-webkit-font-smoothing',
						'-moz-osx-font-smoothing',
						'font-smooth',
						'-webkit-text-align-last',
						'-moz-text-align-last',
						'-ms-text-align-last',
						'text-align-last',
						'letter-spacing',
						'word-spacing',
						'white-space',
						'text-emphasis',
						'text-emphasis-color',
						'text-emphasis-style',
						'text-emphasis-position',
						'text-indent',
						'-ms-text-justify',
						'text-justify',
						'-ms-writing-mode',
						'text-outline',
						'text-wrap',
						'-ms-text-overflow',
						'text-overflow',
						'text-overflow-ellipsis',
						'text-overflow-mode',
						'text-orientation',
						'-ms-word-wrap',
						'word-wrap',
						'-ms-word-break',
						'word-break',
						'-moz-tab-size',
						'-o-tab-size',
						'overflow-wrap',
						'tab-size',
						'-webkit-hyphens',
						'-moz-hyphens',
						'hyphens',
						'unicode-bidi',
						'columns',
						'column-count',
						'column-fill',
						'column-gap',
						'column-rule',
						'column-rule-color',
						'column-rule-style',
						'column-rule-width',
						'column-span',
						'column-width',
						'text-shadow',
						'page-break-after',
						'page-break-before',
						'page-break-inside',
						'src',
						'background',
						'background-color',
						'background-image',
						'background-repeat',
						'background-position',
						'-ms-background-position-x',
						'background-position-x',
						'-ms-background-position-y',
						'background-position-y',
						'-webkit-background-size',
						'-moz-background-size',
						'-o-background-size',
						'background-size',
						'-webkit-background-clip',
						'-moz-background-clip',
						'background-clip',
						'background-origin',
						'background-attachment',
						'box-decoration-break',
						'background-blend-mode',
						'border',
						'border-width',
						'border-style',
						'border-color',
						'border-top',
						'border-top-width',
						'border-top-style',
						'border-top-color',
						'border-right',
						'border-right-width',
						'border-right-style',
						'border-right-color',
						'border-bottom',
						'border-bottom-width',
						'border-bottom-style',
						'border-bottom-color',
						'border-left',
						'border-left-width',
						'border-left-style',
						'border-left-color',
						'-webkit-border-radius',
						'-moz-border-radius',
						'border-radius',
						'-webkit-border-top-left-radius',
						'-moz-border-radius-topleft',
						'border-top-left-radius',
						'-webkit-border-top-right-radius',
						'-moz-border-radius-topright',
						'border-top-right-radius',
						'-webkit-border-bottom-right-radius',
						'-moz-border-radius-bottomright',
						'border-bottom-right-radius',
						'-webkit-border-bottom-left-radius',
						'-moz-border-radius-bottomleft',
						'border-bottom-left-radius',
						'-webkit-border-image',
						'-moz-border-image',
						'-o-border-image',
						'border-image',
						'-webkit-border-image-source',
						'-moz-border-image-source',
						'-o-border-image-source',
						'border-image-source',
						'-webkit-border-image-slice',
						'-moz-border-image-slice',
						'-o-border-image-slice',
						'border-image-slice',
						'-webkit-border-image-width',
						'-moz-border-image-width',
						'-o-border-image-width',
						'border-image-width',
						'-webkit-border-image-outset',
						'-moz-border-image-outset',
						'-o-border-image-outset',
						'border-image-outset',
						'-webkit-border-image-repeat',
						'-moz-border-image-repeat',
						'-o-border-image-repeat',
						'border-image-repeat',
						'outline',
						'outline-width',
						'outline-style',
						'outline-color',
						'outline-offset',
						'-webkit-box-shadow',
						'-moz-box-shadow',
						'box-shadow',
						'-webkit-transform',
						'-moz-transform',
						'-ms-transform',
						'-o-transform',
						'transform',
						'-webkit-transform-origin',
						'-moz-transform-origin',
						'-ms-transform-origin',
						'-o-transform-origin',
						'transform-origin',
						'-webkit-backface-visibility',
						'-moz-backface-visibility',
						'backface-visibility',
						'-webkit-perspective',
						'-moz-perspective',
						'perspective',
						'-webkit-perspective-origin',
						'-moz-perspective-origin',
						'perspective-origin',
						'-webkit-transform-style',
						'-moz-transform-style',
						'transform-style',
						'visibility',
						'cursor',
						'opacity',
						'interpolation-mode',
						'-webkit-filter',
						'filter',
						'backdrop-filter',
						'-webkit-transition',
						'-moz-transition',
						'-ms-transition',
						'-o-transition',
						'transition',
						'-webkit-transition-delay',
						'-moz-transition-delay',
						'-ms-transition-delay',
						'-o-transition-delay',
						'transition-delay',
						'-webkit-transition-timing-function',
						'-moz-transition-timing-function',
						'-ms-transition-timing-function',
						'-o-transition-timing-function',
						'transition-timing-function',
						'-webkit-transition-duration',
						'-moz-transition-duration',
						'-ms-transition-duration',
						'-o-transition-duration',
						'transition-duration',
						'-webkit-transition-property',
						'-moz-transition-property',
						'-ms-transition-property',
						'-o-transition-property',
						'transition-property',
						'-webkit-animation',
						'-moz-animation',
						'-ms-animation',
						'-o-animation',
						'animation',
						'-webkit-animation-name',
						'-moz-animation-name',
						'-ms-animation-name',
						'-o-animation-name',
						'animation-name',
						'-webkit-animation-duration',
						'-moz-animation-duration',
						'-ms-animation-duration',
						'-o-animation-duration',
						'animation-duration',
						'-webkit-animation-play-state',
						'-moz-animation-play-state',
						'-ms-animation-play-state',
						'-o-animation-play-state',
						'animation-play-state',
						'-webkit-animation-timing-function',
						'-moz-animation-timing-function',
						'-ms-animation-timing-function',
						'-o-animation-timing-function',
						'animation-timing-function',
						'-webkit-animation-delay',
						'-moz-animation-delay',
						'-ms-animation-delay',
						'-o-animation-delay',
						'animation-delay',
						'-webkit-animation-iteration-count',
						'-moz-animation-iteration-count',
						'-ms-animation-iteration-count',
						'-o-animation-iteration-count',
						'animation-iteration-count',
						'-webkit-animation-direction',
						'-moz-animation-direction',
						'-ms-animation-direction',
						'-o-animation-direction',
						'animation-direction',
						'-webkit-animation-fill-mode',
						'-moz-animation-fill-mode',
						'-ms-animation-fill-mode',
						'-o-animation-fill-mode',
						'animation-fill-mode',
						'contain',
						'appearance',
						'clip',
						'clip-path',
						'counter-reset',
						'counter-increment',
						'resize',
						'-webkit-user-select',
						'-moz-user-select',
						'-ms-user-select',
						'user-select',
						'-webkit-tap-highlight-color',
						'nav-index',
						'nav-up',
						'nav-right',
						'nav-down',
						'nav-left',
						'pointer-events',
						'quotes',
						'touch-action',
						'will-change',
						'zoom',
						'fill',
						'fill-rule',
						'clip-rule',
						'stroke',
						'aspect-ratio',
						'accent-color',
					],
				},
			],
			'rule-selector-property-disallowed-list': {
				'/^\\.ri-/': ['font-size'],
				'/ri\\-/': ['font-size'],
				'i': ['font-size'],
			},
			'selector-disallowed-list': [
				'i',
				'/^\\.container/',
				'/^\\.g-col/',
				'/^\\.col/',
				'/^\\.grid/',
				'/\\[data-test.+]/',
				'/\\[data-po.+]/',
			],
			'selector-max-attribute': 1,
			'selector-max-id': 1,
			'selector-no-qualifying-type': true,
			'selector-not-notation': 'simple',
			'selector-pseudo-element-no-unknown': [
				true,
				{
					'ignorePseudoElements': ['ng-deep'],
				},
			],
			'time-min-milliseconds': 50,
			'unit-allowed-list': ['px', 'rem', 'deg', 'fr', '%', 'ms', 'vw', 'vh', 'vmin', 'vmax'],
		},
	};

	it('should have the following value', () => {
		expect(config).toEqual(data);
	});
});
